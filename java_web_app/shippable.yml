lalanguage: java

jdk:
  - oraclejdk8

integrations:
  generic:
    - integrationName: drship_nexus

env:
  global:
    - group_id="com.demo"
    - artifact_id="helloworld"
    - artifact_version="0.0.1-SNAPSHOT"
    - artifact_extension="war"
    - artifact_repo="repository/maven-snapshots"
    - ship_test_res_loc="shippable/testresults"

build:
  ci:
    - export nexus_url="http://${NEXUS_HOST}"
    - export repository_url=$nexus_url"/"$artifact_repo
    - |
       mkdir -p $ship_test_res_loc
       mkdir -p ~/.m2
    - shipctl replace temp/settings.xml pom.xml
    - cp temp/settings.xml ~/.m2/.
    - mvn -q -B clean install deploy
    - ls -al $SHIPPABLE_BUILD_DIR/target

# OPTIONAL: if you want to use custom Docker Build Image and also store information in a params
# resource to be used in downstream Assembly Lines
  pre_ci:
    - export IMG_TAG=$(shipctl get_resource_version_key build_custom_ci_img_dh "versionName")

  pre_ci_boot:
    image_name: devopsrecipes/build_custom_ci
    image_tag: $IMG_TAG
    pull: true

  on_success:
    - shipctl put_resource_state_multi war_loc "versionName=$artifact_version" "artifact_version=$artifact_version" "group_id=$group_id" "artifact_id=$artifact_id"
    - shipctl put_resource_state_multi war_loc "artifact_extension=$artifact_extension" "repository_url=$repository_url" "build_nbr=$BUILD_NUMBER"

resources:
  - name: war_loc
    type: params
    versionTemplate:
      params:
        seed: true

jobs:
  - name: java_web_app_runCI
    type: runCI
    dependencyMode: strict
    triggerMode: parallel
    steps:
      - IN: build_custom_ci_img_dh
      - IN: gcp_nexus_info
      - OUT: war_loc
    flags:
      - war
